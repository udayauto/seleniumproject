log4j.logger.devpinoyLogger=DEBUG, dest1
#Find all the log levels
# dest1 will be given in another property
log4j.appender.dest1=org.apache.log4j.RollingFileAppender
#RollingFileAppender delivers log events to the log file destination
log4j.appender.dest1.maxFileSize=5000KB
#logs will be added to a single file until this 5000KB limit is reached
#After 5000KB, another new log file will be created
log4j.appender.dest1.maxBackupIndex= 3
#Maximum number of log files than can be backup-ed is 3
log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
#Used to specify the format in which the logs needs to be displayed
#(i.e. PatternLayout format)
log4j.appender.dest1.layout.ConversionPattern= %d{dd MMM yyyy HH:mm:ss} %c %m%n
#ConversionPattern and its associated value is the format of the timestamp (%d{dd MMM yyyy HH:mm:ss}) + logger name(%c) + acutal log text(%m%n) in which the logs needs to be created/tracked.
log4j.appender.dest1.File=C:\\Application.log
#Specifies the path at which the log files needs to be created.
log4j.appender.dest1.Append=false
# Creates a new file on new execution, instead of appending the logs to the older log files.

#Replace SOP's in Java Class, and use the above created 'log4j.properties' file to log with the help of Logger.getLogger()